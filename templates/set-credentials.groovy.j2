import jenkins.model.*
import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.common.*
import com.cloudbees.plugins.credentials.domains.*
import com.cloudbees.plugins.credentials.impl.*
import com.cloudbees.jenkins.plugins.sshcredentials.impl.*
import hudson.plugins.sshslaves.*;

domain = Domain.global()
store = Jenkins.instance.getExtensionList('com.cloudbees.plugins.credentials.SystemCredentialsProvider')[0].getStore()

{% for key, value in jenkins2_credentials.items() -%}
{% set name, properties = key, value -%}
{{name}} = new {% if properties.type == 'key' %}BasicSSHUserPrivateKey(
  CredentialsScope.GLOBAL,
  "{{ properties.id}}",
  "{{ properties.username }}",
  {% if properties.keySource == 0 %}new BasicSSHUserPrivateKey.DirectEntryPrivateKeySource("{{ properties.key }}"),
  {% elif properties.keySource == 1 %}new BasicSSHUserPrivateKey.FileOnMasterPrivateKeySource("{{ properties.key }}"),
  {% elif properties.keySource == 2 %}new BasicSSHUserPrivateKey.UsersPrivateKeySource(),
  {% endif %}
  "{{ properties.passphrase }}",
  "{{ properties.description }}"
)
{% elif properties.type == 'password' %}UsernamePasswordCredentialsImpl(
  CredentialsScope.GLOBAL,
  "{{ properties.id}}",
  "{{ properties.description }}",
  "{{ properties.username }}",
  "{{ properties.password }}"
)
{% endif -%}
store.addCredentials(domain, {{ name }})
{% endfor %}
